{"version":3,"sources":["NewTodoForm.js","Todo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["NewTodoForm","props","state","task","handleChange","bind","handleSubmit","evt","this","setState","target","name","value","preventDefault","createTodo","id","uuidv4","completed","className","onSubmit","htmlFor","type","placeholder","onChange","Component","Todo","isEditing","handleRemove","toggleForm","handleUpdate","handleToggle","removeTodo","updateTodo","toggleTodo","onClick","TodoList","todos","create","remove","update","toggleCompletion","newTodo","filter","t","updatedTask","updatedTodos","map","todo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UA4CeA,E,kDAtCV,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CAACC,KAAK,IACnB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAJN,E,gDAOlB,SAAaE,GACVC,KAAKC,SAAL,eACKF,EAAIG,OAAOC,KAAMJ,EAAIG,OAAOE,U,0BAKpC,SAAaL,GACVA,EAAIM,iBACJL,KAAKP,MAAMa,WAAX,2BAA0BN,KAAKN,OAA/B,IAAqCa,GAAGC,cAAUC,WAAU,KAC5DT,KAAKC,SAAS,CAACN,KAAK,O,oBAExB,WACI,OACI,uBAAMe,UAAU,cAAcC,SAAUX,KAAKF,aAA7C,UACI,uBAAOc,QAAQ,OAAf,sBACA,uBACIC,KAAK,OACLC,YAAY,WACZP,GAAG,OACHJ,KAAK,OACLC,MAAOJ,KAAKN,MAAMC,KAClBoB,SAAUf,KAAKJ,eAGnB,qD,GAjCWoB,aC4EZC,G,wDA3EX,WAAYxB,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTwB,WAAU,EACVvB,KAAK,EAAKF,MAAME,MAEpB,EAAKwB,aAAe,EAAKA,aAAatB,KAAlB,gBACpB,EAAKuB,WAAa,EAAKA,WAAWvB,KAAhB,gBAClB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKwB,aAAe,EAAKA,aAAaxB,KAAlB,gBACpB,EAAKyB,aAAe,EAAKA,aAAazB,KAAlB,gBAVN,E,gDAYlB,WACIG,KAAKP,MAAM8B,WAAWvB,KAAKP,MAAMc,M,wBAIrC,WACQP,KAAKC,SAAS,CAACiB,WAAWlB,KAAKN,MAAMwB,c,0BAI7C,SAAanB,GACTA,EAAIM,iBACJL,KAAKP,MAAM+B,WAAWxB,KAAKP,MAAMc,GAAGP,KAAKN,MAAMC,MAC/CK,KAAKC,SAAS,CAACiB,WAAU,M,0BAG7B,SAAanB,GACTC,KAAKC,SAAL,eACKF,EAAIG,OAAOC,KAAMJ,EAAIG,OAAOE,U,0BAKpC,SAAaL,GACVC,KAAKP,MAAMgC,WAAWzB,KAAKP,MAAMc,M,oBAIrC,WA+BI,OA7BGP,KAAKN,MAAMwB,UAEN,qBAAKR,UAAU,OAAf,SACI,uBAAMA,UAAU,iBAAiBC,SAAUX,KAAKqB,aAAhD,UACI,uBACIR,KAAK,OACLT,MAAOJ,KAAKN,MAAMC,KAClBQ,KAAK,OACLY,SAAUf,KAAKJ,eACnB,+CAQJ,sBAAKc,UAAU,OAAf,UAEA,oBAAIA,UAAWV,KAAKP,MAAMgB,UAAY,sBAAwB,aAAciB,QAAS1B,KAAKsB,aAA1F,SACKtB,KAAKP,MAAME,OAEhB,sBAAKe,UAAU,eAAf,UACA,wBAAQgB,QAAS1B,KAAKoB,WAAtB,kBACA,wBAAQM,QAAS1B,KAAKmB,aAAtB,yB,GAnEDH,cC6EJW,G,wDA5EX,WAAYlC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CAACkC,MAAM,IACpB,EAAKC,OAAS,EAAKA,OAAOhC,KAAZ,gBACd,EAAKiC,OAAS,EAAKA,OAAOjC,KAAZ,gBACd,EAAKkC,OAAS,EAAKA,OAAOlC,KAAZ,gBACd,EAAKmC,iBAAmB,EAAKA,iBAAiBnC,KAAtB,gBANV,E,0CAWlB,SAAOoC,GACHjC,KAAKC,SAAS,CACV2B,MAAM,GAAD,mBAAK5B,KAAKN,MAAMkC,OAAhB,CAAsBK,Q,oBAInC,SAAO1B,GACHP,KAAKC,SAAS,CACV2B,MAAO5B,KAAKN,MAAMkC,MAAMM,QAAO,SAAAC,GAAC,OAAIA,EAAE5B,KAAOA,S,oBAIrD,SAAOA,EAAG6B,GACN,IAAMC,EAAerC,KAAKN,MAAMkC,MAAMU,KAAI,SAAAC,GACtC,OAAGA,EAAKhC,KAAOA,EACJ,2BAAIgC,GAAX,IAAgB5C,KAAKyC,IAElBG,KAEXvC,KAAKC,SAAS,CAAC2B,MAAMS,M,8BAIzB,SAAiB9B,GACb,IAAM8B,EAAerC,KAAKN,MAAMkC,MAAMU,KAAI,SAAAC,GACtC,OAAGA,EAAKhC,KAAOA,EACJ,2BAAIgC,GAAX,IAAgB9B,WAAY8B,EAAK9B,YAE9B8B,KAEXvC,KAAKC,SAAS,CAAC2B,MAAMS,M,oBAEzB,WAAU,IAAD,OAECT,EAAQ5B,KAAKN,MAAMkC,MAAMU,KAAI,SAAAC,GAC/B,OAAO,cAAC,EAAD,CAEKhC,GAAIgC,EAAKhC,GACTZ,KAAM4C,EAAK5C,KACX4B,WAAY,EAAKO,OACjBN,WAAY,EAAKO,OACjBtB,UAAW8B,EAAK9B,UAChBgB,WAAY,EAAKO,kBANZO,EAAKhC,OAU1B,OACI,sBAAKG,UAAU,WAAf,UAEI,4CACc,oEAGd,6BACKkB,IAIL,cAAC,EAAD,CAAatB,WAAYN,KAAK6B,gB,GAtEvBb,cCWRwB,G,kKAVd,WACE,OACE,8BAEG,cAAC,EAAD,U,GALUxB,cCOHyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b0143acd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './NewTodoForm.css';\r\n\r\n\r\n class NewTodoForm extends Component {\r\n     constructor(props){\r\n         super(props);\r\n         this.state = {task:\"\"}\r\n         this.handleChange = this.handleChange.bind(this);\r\n         this.handleSubmit = this.handleSubmit.bind(this);\r\n     }\r\n\r\n     handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name]:evt.target.value\r\n        });\r\n     }\r\n\r\n\r\n     handleSubmit(evt){\r\n        evt.preventDefault();\r\n        this.props.createTodo({...this.state,id:uuidv4(), completed:false});\r\n        this.setState({task:\"\"});\r\n     }\r\n    render() {\r\n        return (\r\n            <form className=\"NewTodoForm\" onSubmit={this.handleSubmit}>\r\n                <label htmlFor=\"task\">New Todo</label>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"New Todo\" \r\n                    id=\"task\" \r\n                    name=\"task\"\r\n                    value={this.state.task} \r\n                    onChange={this.handleChange}\r\n\r\n                />\r\n                <button>Add Todo</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewTodoForm;","import React, { Component } from 'react';\r\nimport './Todo.css';\r\n\r\n\r\n\r\nclass Todo extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isEditing:false,\r\n            task:this.props.task\r\n        }\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleToggle = this.handleToggle.bind(this);\r\n    }\r\n    handleRemove(){\r\n        this.props.removeTodo(this.props.id);\r\n    }\r\n\r\n\r\n    toggleForm(){\r\n            this.setState({isEditing:!this.state.isEditing});\r\n    }\r\n\r\n\r\n    handleUpdate(evt){\r\n        evt.preventDefault();\r\n        this.props.updateTodo(this.props.id,this.state.task);\r\n        this.setState({isEditing:false})\r\n    }\r\n\r\n    handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name]:evt.target.value\r\n        });\r\n     }\r\n\r\n\r\n     handleToggle(evt){\r\n        this.props.toggleTodo(this.props.id);\r\n     }\r\n\r\n\r\n    render() {\r\n        let result;\r\n        if(this.state.isEditing){\r\n            result = (\r\n                <div className='Todo'>\r\n                    <form className='Todo-edit-form' onSubmit={this.handleUpdate}>\r\n                        <input \r\n                            type=\"text\" \r\n                            value={this.state.task} \r\n                            name=\"task\"\r\n                            onChange={this.handleChange}/>\r\n                        <button>Save</button>\r\n                    </form>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            result = (\r\n                    <div className='Todo'>\r\n\r\n                    <li className={this.props.completed ? 'Todo-task completed' : 'Todo-task '} onClick={this.handleToggle}>\r\n                        {this.props.task}\r\n                    </li>\r\n                    <div className='Todo-buttons'>\r\n                    <button onClick={this.toggleForm}>Edit</button>\r\n                    <button onClick={this.handleRemove}>X</button>\r\n                    </div>\r\n                    </div>\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react';\r\nimport NewTodoForm from './NewTodoForm';\r\nimport Todo from './Todo';\r\nimport './TodoList.css';\r\n\r\nclass TodoList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {todos:[]};\r\n        this.create = this.create.bind(this);\r\n        this.remove = this.remove.bind(this);\r\n        this.update = this.update.bind(this);\r\n        this.toggleCompletion = this.toggleCompletion.bind(this);\r\n    }\r\n\r\n\r\n\r\n    create(newTodo){\r\n        this.setState({\r\n            todos:[...this.state.todos,newTodo]\r\n        })\r\n    }\r\n\r\n    remove(id){\r\n        this.setState({\r\n            todos: this.state.todos.filter(t => t.id !== id)\r\n        });\r\n    }\r\n\r\n    update(id,updatedTask){\r\n        const updatedTodos = this.state.todos.map(todo => {\r\n            if(todo.id === id){\r\n                return {...todo,task:updatedTask};\r\n            }\r\n            return todo;\r\n        });\r\n        this.setState({todos:updatedTodos});\r\n    }\r\n\r\n\r\n    toggleCompletion(id){\r\n        const updatedTodos = this.state.todos.map(todo => {\r\n            if(todo.id === id){\r\n                return {...todo,completed: !todo.completed};\r\n            }\r\n            return todo;\r\n        });\r\n        this.setState({todos:updatedTodos});\r\n    }\r\n    render() {\r\n\r\n        const todos = this.state.todos.map(todo => {\r\n            return <Todo \r\n                        key={todo.id} \r\n                        id={todo.id} \r\n                        task={todo.task} \r\n                        removeTodo={this.remove}\r\n                        updateTodo={this.update}\r\n                        completed={todo.completed}\r\n                        toggleTodo={this.toggleCompletion}\r\n\r\n                    />;\r\n        })\r\n        return (\r\n            <div className=\"TodoList\">\r\n    \r\n                <h1>\r\n                    Todo List <span>A Simple React Todo List App.</span>\r\n                </h1>\r\n                \r\n                <ul>\r\n                    {todos}\r\n                    \r\n                </ul>\r\n\r\n                <NewTodoForm createTodo={this.create}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default TodoList;","import React, {Component} from 'react'; \nimport TodoList from './TodoList';\nimport './App.css';\n\n\nclass App extends Component {\n render() {\n   return (\n     <div >\n\n        <TodoList/>\n       \n     </div>\n   );\n }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}